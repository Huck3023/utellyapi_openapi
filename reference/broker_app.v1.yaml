openapi: 3.0.0
info:
  title: broker_app
  version: v1
  description: ''
servers:
  - url: 'https://services.utelly.com/broker_app/v1'
    description: prod
  - url: 'https://staging-services.utelly.com/broker_app/v1'
    description: staging
  - url: 'https://dev-services.utelly.com/broker_app/v1'
    description: dev
paths:
  /user/login:
    post:
      summary: Login
      operationId: v1.user.login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                required:
                  - id
                  - access_token
                  - refresh_token
              examples:
                '1':
                  value:
                    id: 9b38b54dd74644db96e772d6076615da
                    access_token: 9b38b54dd74644db96e772d6076615da
                    refresh_token: f9a664c1ba3f4665aa902ded47edaca9
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            examples:
              '1':
                value:
                  email: hello@utelly.com
                  password: 3@Ubc1iCYZUKGtAi
      tags:
        - User Management
    parameters: []
  /user/refresh_jwt_access_token:
    post:
      summary: Refresh JWT access_token
      operationId: v1.user.refresh_jwt_access_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                required:
                  - access_token
              examples:
                '1':
                  value:
                    access_token: f9a664c1ba3f4665aa902ded47edaca9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
            examples:
              '1':
                value:
                  refresh_token: cc53ca4aaf294c489a29c1515cb1f1b3
      description: ''
      tags:
        - User Management
    parameters: []
  /user/register:
    post:
      summary: Register
      operationId: v1.user.register
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                required:
                  - id
                  - access_token
                  - refresh_token
              examples:
                '1':
                  value:
                    id: 9b38b54dd74644db96e772d6076615da
                    access_token: 9b38b54dd74644db96e772d6076615da
                    refresh_token: f9a664c1ba3f4665aa902ded47edaca9
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                registration_token:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
                destination_url_template:
                  type: string
              required:
                - first_name
                - last_name
                - email
                - registration_token
                - password
                - password_confirm
                - destination_url_template
            examples:
              '1':
                value:
                  first_name: Keizer
                  last_name: SÃ¶ze
                  email: keizer@email.com
                  registration_token: 55a68d8af89b4a29a453c9a21b37445f
                  password: password
                  password_confirm: password
                  destination_url_template: 'https://mydomain.com/confirm?user_id={user_id}&code={code}'
      tags:
        - User Management
    parameters: []
  /user/forgot_password:
    post:
      summary: Forgot password
      operationId: v1.user.forgot_password
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                destination_url_template:
                  type: string
              required:
                - email
                - destination_url_template
            examples:
              '1':
                value:
                  email: keizer@email.com
                  destination_url_template: 'https://mydomain.com/forgot_password_page?email={email}&token={token}'
      description: sends an email with a authentication token
      tags:
        - User Management
    parameters: []
  /user/email_confirm:
    post:
      summary: Confirm email
      operationId: v1.user.confirm
      responses:
        '200':
          description: OK
      description: validates user email
      parameters: []
      tags:
        - User Management
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                code:
                  type: string
            examples:
              '1':
                value:
                  user_id: 9b38b54dd74644db96e772d6076615da
                  code: 06ebadbe3bbf4e2798fd421b1346c1ee
    parameters: []
  /user/preferences:
    parameters: []
    get:
      summary: Get preferences
      operationId: v1.user.get_preferences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  values:
                    type: array
                    items:
                      $ref: ../models/kv_field.v1.yaml
              examples:
                '1':
                  value:
                    values:
                      - key: default_env
                        value: '1'
                      - key: default_perspective
                        value: '1'
                      - key: default_view
                        value: '1'
      security:
        - Authorization: []
      description: ''
      tags:
        - User Management
  /ui/layout:
    parameters: []
    get:
      summary: Get ui layout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  layout:
                    type: array
                    items:
                      type: object
                      properties:
                        environments:
                          type: array
                          items:
                            type: object
                            properties:
                              environment:
                                $ref: ../models/Environment.v1.yaml
                              perspectives:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    perspective:
                                      $ref: ../models/Perspective.v1.yaml
                                    views:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          view:
                                            $ref: ../models/View.v1.yaml
                                          permission:
                                            type: string
              examples:
                '1':
                  value:
                    layout:
                      - environments:
                          - environment:
                              id: '1'
                              name:
                                - locale: en
                                  value: development
                                - locale: nl
                                  value: ontwikkeling
                              description:
                                - locale: en
                                  value: use and make things to break them
                              tooltip:
                                - locale: en
                                  value: this environment gets refreshed daily
                            perspectives:
                              - perspective:
                                  id: '1'
                                  name:
                                    - locale: en
                                      value: architect
                                    - locale: nl
                                      value: ontwerp
                                  description:
                                    - locale: en
                                      value: this is where you wire things up
                                  tooltip:
                                    - locale: en
                                      value: 'In this view, we can orchestrate how things are connected'
                                views:
                                  - view:
                                      id: '1'
                                      name:
                                        - locale: en
                                          value: Overview
                                      resource: data_flows
                                      renderer: df_overview
                                      description:
                                        - locale: en
                                          value: ''
                                      tooltip:
                                        - locale: en
                                          value: ''
                                      perspectives_id:
                                        - '1'
                                    permission: read
      operationId: v1.ui.get_layout
      security:
        - Authorization: []
      description: ''
      tags:
        - UI
  '/configurations/environment/{environment_id}/view/{view_id}':
    get:
      summary: Get configurations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  configurations:
                    type: array
                    items:
                      $ref: ../models/Configuration.v1.yaml
              examples:
                '1':
                  value:
                    configurations:
                      - id: '1'
                        name:
                          - locale: en
                            value: friendly name of the conf
                        payload: {}
                      - id: '2'
                        name:
                          - locale: en
                            value: friendly name of the conf2
                        payload: {}
      operationId: v1.configuration.get
      description: ''
      security:
        - Authorization: []
      tags:
        - Configuration Management
    parameters:
      - schema:
          type: string
        name: environment_id
        in: path
        required: true
      - schema:
          type: string
        name: view_id
        in: path
        required: true
  /user/forgot_password_confirm:
    post:
      summary: Forgot password confirm
      operationId: v1.user.forgot_password_confirm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
            examples:
              '1':
                value:
                  email: keizer@email.com
                  token: 3c5ace8b39354d54aaefec5c7c35da76
                  password: password
                  password_confirm: password
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string
              examples:
                '1':
                  value:
                    id: 4546ed7dd9ed477ba368749f0bd8b3a1
                    access_token: eb1b44a9977c44e1a880df4637efec4a
                    refresh_token: f63034cbebf34f7d852f7ab83a39a1b4
      tags:
        - User Management
  /data-browser:
    get:
      summary: Retrieve Browsing Data
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _embed:
                    type: object
                    properties:
                      genres:
                        type: array
                        items: {}
                      _links:
                        type: object
                      artworks:
                        type: array
                        items: {}
                      created_at:
                        type: string
                      descriptions:
                        type: array
                        items: {}
                      guiid:
                        type: string
                      '':
                        type: string
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-data-browser
  '/data-browser/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Retrieve Specific Browsing Data Id
      tags: []
      responses: {}
      operationId: get-data-browser-id
components:
  schemas:
    Data-Browsing:
      title: Data-Browsing
      type: object
      description: 'Data to be retrieved on the https://portal2-dev.utelly.com/ARCHITECT/data-flows/data-builder/data-browse'
      properties:
        headers:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            type:
              type: string
            release:
              type: string
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              type:
                type: string
              release:
                type: string
      required:
        - headers
        - data
    Data-Browsing-With-Id:
      title: Data-Browsing-With-Id
      type: object
      description: 'Data to be retrieved on the https://portal2-dev.utelly.com/ARCHITECT/data-flows/data-builder/data-browse '
      properties:
        id:
          $ref: ''
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
      x-apikeyInfoFunc: security.check_token
