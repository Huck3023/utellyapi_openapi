openapi: 3.0.0
info:
  title: security_manager
  version: v1
servers:
  - url: 'https://services.utelly.com/security_manager/v1'
    description: prod
  - url: 'https://staging-services.utelly.com/security_manager/v1'
    description: staging
  - url: 'https://dev-services.utelly.com/security_manager/v1'
    description: dev
paths:
  /authenticate:
    post:
      summary: Authenticate
      operationId: v1.user.authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  id:
                    type: string
                required:
                  - access_token
                  - refresh_token
                  - id
              examples:
                '1':
                  value:
                    id: 9b38b54dd74644db96e772d6076615da
                    access_token: 9b38b54dd74644db96e772d6076615da
                    refresh_token: f9a664c1ba3f4665aa902ded47edaca9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            examples:
              '1':
                value:
                  email: hello@utelly.com
                  password: 3@Ubc1iCYZUKGtAi
        description: ''
      description: Authenticates a user
      tags:
        - Authentication Management
  /refresh_jwt_access_token:
    post:
      summary: Refresh jwt access_token
      operationId: v1.user.refresh_jwt_access_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                required:
                  - access_token
              examples:
                '1':
                  value:
                    access_token: f9a664c1ba3f4665aa902ded47edaca9
            application/xml:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
            examples:
              '1':
                value:
                  refresh_token: cc53ca4aaf294c489a29c1515cb1f1b3
      tags:
        - Authentication Management
    parameters: []
  /register:
    post:
      summary: User register
      operationId: v.user.register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                required:
                  - id
                  - access_token
                  - refresh_token
              examples:
                '1':
                  value:
                    id: 9b38b54dd74644db96e772d6076615da
                    access_token: 9b38b54dd74644db96e772d6076615da
                    refresh_token: f9a664c1ba3f4665aa902ded47edaca9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                registration_token:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
              required:
                - first_name
                - last_name
                - email
                - registration_token
                - password
                - password_confirm
            examples:
              '1':
                value:
                  first_name: Keizer
                  last_name: SÃ¶ze
                  email: keizer@email.com
                  registration_token: 55a68d8af89b4a29a453c9a21b37445f
                  password: password
                  password_confirm: password
      tags:
        - Authentication Management
  /forgot_password:
    post:
      summary: Forgot password
      operationId: v1.user.forgot_password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
              examples:
                '1':
                  value:
                    token: f29ec3f2b0304456b9fd29ae81865af2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
            examples:
              '1':
                value:
                  email: keiser@email.com
      tags:
        - Authentication Management
  /forgot_password_confirm:
    post:
      summary: Forgot password confirm
      operationId: v1.user.forgot_password_confirm
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                token:
                  type: string
                password:
                  type: string
                password_confirm:
                  type: string
              required:
                - email
                - token
                - password
                - password_confirm
            examples:
              '1':
                value:
                  email: keiser@email.com
                  token: f29ec3f2b0304456b9fd29ae81865af2
                  password: password
                  password_confirm: password
      tags:
        - Authentication Management
  /confirm:
    post:
      summary: Confirm email
      operationId: v1.user.confirm
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: query
          name: code
        - schema:
            type: string
          in: query
          name: user_id
          description: ''
      description: validates user email
      tags:
        - Authentication Management
components:
  schemas: {}
  securitySchemes: {}
